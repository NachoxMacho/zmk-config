/*
*
* Copyright (c) 2021 Darryl deHaan
* SPDX-License-Identifier: MIT
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
  chosen {
    zmk,matrix_transform = &default_transform;

    //zmk,matrix_transform = &five_column_transform;
  };
};

/ {
        behaviors {
                hm: homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS";
                #binding-cells = <2>;
                tapping-term-ms = <200>;
                quick-tap-ms = <125>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
                };
                lth: layer_tap_hold {
                compatible = "zmk,behavior-hold-tap";
                label = "LAYER_TAP_HOLD";
                #binding-cells = <2>;
                tapping-term-ms = <200>;
                quick-tap-ms = <200>;
                flavor = "tap-preferred";
                bindings = <&mo>, <&kp>;
                };
        };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "QWERTY";
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp ESCAPE   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp EQUAL
   &kp BACKSLASH &hm LEFT_GUI A &hm LEFT_ALT S &hm LEFT_SHIFT D &hm LEFT_CONTROL F &kp G   &kp H &hm RIGHT_CONTROL J  &hm RIGHT_SHIFT K     &hm RIGHT_ALT L   &hm RIGHT_WIN SEMI &kp SINGLE_QUOTE
   &sl 1 &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp MINUS
                  &lth 1 DELETE &lth 6 BACKSPACE &lth 3 TAB   &lth 2 ENTER &kp SPACE &sl 6
                        >;
                };
                symbol_layer {
                        label = "SYM";
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp GRAVE &kp PERCENT &kp AT_SIGN &kp HASH &kp DOLLAR &kp ASTERISK                          &trans &trans &trans &trans &trans &trans
   &kp AMPERSAND &kp PIPE &kp LEFT_PARENTHESIS &kp LEFT_BRACKET &kp LEFT_BRACE &kp BACKSLASH   &tog 5 &trans &trans &trans &trans &trans
   &kp EXCLAMATION &kp CARET &kp RIGHT_PARENTHESIS &kp RIGHT_BRACKET &kp RIGHT_BRACE &kp TILDE &tog 4 &trans &trans &trans &trans &trans
                        &trans &trans &trans   &trans &trans &trans
                        >;
                };

                numpad_layer {
                        label = "NUM";
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans &trans &kp NUMBER_7 &kp NUMBER_8 &kp NUMBER_9 &trans   &trans &trans &trans &trans &trans &trans
   &trans &trans &kp NUMBER_4 &kp NUMBER_5 &kp NUMBER_6 &kp NUMBER_0   &trans &trans &trans &trans &trans &trans
   &trans &trans &kp NUMBER_1 &kp NUMBER_2 &kp NUMBER_3 &trans   &trans &trans &trans &trans &trans &trans
                    	&trans &trans &trans   &trans &trans &trans
                        >;
                };
                media_layer {
                        label = "MEDIA";
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans &kp HOME &kp UP_ARROW &kp  END                &kp C_NEXT       &trans   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_SEL 5
   &trans &kp LEFT_ARROW &kp DOWN_ARROW &kp RIGHT_ARROW &kp C_PLAY_PAUSE &trans   &trans &bt BT_NXT &trans &bt BT_PRV &trans &bt BT_CLR
   &trans &kp PG_UP &trans &kp PG_DN                    &kp C_PREVIOUS   &trans   &trans &trans &trans &trans &trans &trans
                    	&trans &trans &trans   &trans &trans &trans
                        >;
                };
                games_layer {
                        label = "GAME";
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp ESCAPE   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp EQUAL
   &kp LEFT_ALT &kp A &kp S &kp D &kp F &kp G   &kp H &kp J &kp K &kp L &kp SEMICOLON &kp SINGLE_QUOTE
   &kp LEFT_CONTROL &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp MINUS
                    	&kp LEFT_SHIFT &kp BSPC &kp TAB   &lt 6 ENTER &kp SPACE &to 0
                        >;
                };
                val_layer {
                        label = "VAL";
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp ESCAPE   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp EQUAL
   &kp LEFT_SHIFT &kp A &kp S &kp D &kp F &kp G   &kp H &kp J &kp K &kp L &kp SEMICOLON &kp SINGLE_QUOTE
   &kp LEFT_CONTROL &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp MINUS
                    	&kp LEFT_ALT &kp SPACE &kp TAB   &lt 6 ENTER &kp BACKSPACE &to 0
                        >;
                };
                func_layer {
                        label = "FUNC";
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp F1 &kp F2 &kp F3 &kp F4  &kp F5  &kp F6    &kp F13 &kp F14 &kp F15 &kp F16 &kp F17 &kp F18
   &trans &trans &trans &trans  &trans  &trans    &trans &trans &trans &trans &trans &trans
   &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12   &kp F19 &kp F20 &kp F21 &kp F22 &kp F23 &kp F24
                    	&trans &trans &trans   &trans &trans &trans
                        >;
                };
        };
};
